    fn create_dummy_transaction() -> Transaction {
        let t = Triangle::genesis();
        let children = t.subdivide();
        
        let keypair = KeyPair::generate().unwrap();
        let address = keypair.address();
        
        let mut tx = SubdivisionTx::new(
            t.hash(),
            children,
            address,
            100,
            1,
        );
        
        // Sign the transaction
        let message = tx.signable_message();
        let signature = keypair.sign(&message).unwrap();
        let public_key = keypair.public_key.serialize().to_vec();
        tx.sign(signature, public_key);
        
        Transaction::Subdivision(tx)
    }
